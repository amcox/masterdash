geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
cbbPalette <- c("#0072B2", "#009E73", "#F0E442", "#E69F00", "#D55E00", "#56B4E9", "#CC79A7", "#000000")#
#
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
geom_smooth(method=lm)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
geom_smooth(data=points, method=lm)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
geom_smooth(data=points, method=lm, aes(x=CR, y=AI))+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
geom_smooth(data=points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
school_points <- subset(points, Sub == "T" & Grade == "T")
school_points
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
geom_point(data = school_points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_shape_manual(values=c(3,4,8))+#
geom_smooth(data=points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_shape_manual(values=c(5,6,7)+#
geom_point(data = school_points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_shape_manual(values=c(3,4,8))+#
geom_smooth(data=points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
geom_point(data = school_points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_shape_manual(values=c(3,4,8))+#
geom_smooth(data=points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
geom_point(data = school_points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
geom_smooth(data=points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
geom_point(data = school_points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School), size=10))+#
geom_smooth(data=points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
geom_point(data = school_points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School), size=100))+#
geom_smooth(data=points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
geom_point(data = school_points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School), size=4))+#
geom_smooth(data=points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
geom_point(data = school_points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)), size=4)+#
geom_smooth(data=points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
geom_point(data = school_points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)), size=40)+#
geom_smooth(data=points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
geom_point(data = school_points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)), size=10)+#
geom_smooth(data=points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
geom_point(data = school_points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)), size=5)+#
geom_smooth(data=points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
geom_smooth(data=points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette)+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
geom_smooth(data = points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
geom_smooth(data = points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
geom_smooth(data = points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
title("All Subject-Grade Scores for ReNEW Schools")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
geom_smooth(data = points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
labs(title="All Subject-Grade Scores for ReNEW Schools")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
geom_smooth(data = points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
ggtitle("All Subject-Grade Scores for ReNEW Schools")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
geom_smooth(data = points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
labs(title="All Subject-Grade Scores for ReNEW Schools")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
geom_smooth(data = points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
opts(title="All Subject-Grade Scores for ReNEW Schools")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
geom_smooth(data = points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
opts(title="All Subject-Grade i/LEAP Scores for ReNEW Schools")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
geom_smooth(data = points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
opts(title="All Subject-Grade i/LEAP Scores for ReNEW Schools",plot.title=theme_text(lineheight=2))
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
geom_smooth(data = points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
opts(title="All Subject-Grade i/LEAP Scores for ReNEW Schools",plot.title=theme_text(lineheight=5))
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
geom_smooth(data = points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
opts(title="All Subject-Grade i/LEAP Scores for ReNEW Schools",plot.title=theme_text(lineheight=.5))
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
geom_smooth(data = points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
opts(title="All Subject-Grade i/LEAP Scores for ReNEW Schools")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = school_points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
geom_smooth(data = school_points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
opts(title="All Subject-Grade i/LEAP Scores for ReNEW Schools")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = school_points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
opts(title="All Subject-Grade i/LEAP Scores for ReNEW Schools")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = school_points, size=5, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
opts(title="All Subject-Grade i/LEAP Scores for ReNEW Schools")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = school_points, size=3, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
opts(title="All Subject-Grade i/LEAP Scores for ReNEW Schools")
ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = school_points, size=3, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
opts(title="Overall AI Scores for ReNEW Schools")
all_points <- ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = points, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
geom_smooth(data = points, method=lm, aes(x=CR, y=AI), fullrange=T)+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
opts(title="All Subject-Grade i/LEAP Scores for ReNEW Schools")#
overall_points <- ggplot()+#
geom_rect(data = rects, aes(ymin = ystart, ymax = yend, xmin = 0, xmax = 100, fill=col), alpha=.15)+#
scale_fill_manual(values=cbbPalette, name="Letter Grade")+#
geom_point(data = school_points, size=3, aes(x=CR, y=AI, color=factor(Year), shape=factor(School)))+#
scale_color_discrete(name="Year")+#
scale_shape_discrete(name="School")+#
scale_y_continuous(limits=c(0,150), breaks=seq(0, 150, 10))+#
scale_x_continuous(limits=c(0,100), breaks=seq(0, 150, 10))+#
coord_fixed()+#
ylab("Assessment Index")+#
xlab("Percent of Students Scoring Basic and Above")+#
opts(title="Overall AI Scores for ReNEW Schools")#
multiplot(all_points, overall_points)
x <- rnorm(10)
print(x)
x <- rnorm(10, 20, 2)
print(x)
summary(x)
e <- rnorm(100, 0, 1)
e
y <- 1.5 - 3 * x + e
y
x
x <- 1:100
y <- 1.5 - 3 * x + e
plot (x, y)
Carcassonne Rules.pdf
x <- rnorm(100)
hist(x)
?par
y <- x + rnorm(100)
par(las=1)
plot(x,y)
par(las=2)
plot(x,y)
par(las=1)
x1 <- rnorm(10)
y1 <- rnorm(10)
points(x1, y1, col="red")
library(lattice)
library(nlme)
Carcassonne Rules.pdf
xyplot(distance ~ age | Subject, data=Orthodont)
xyplot(distance ~ age | Subject, data=Orthodont, type="b")
?histogram
?boxplot
?par
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
set.seed(1)
rpois(5, 2)
?rpois
set.seed(31);#
heightsCM = rnorm(30,mean=188, sd=5);#
weightsK = rnorm(30,mean=84,sd=3); #
hasDaughter = sample(c(TRUE,FALSE),size=30,replace=T); #
dataFrame = data.frame(heightsCM,weightsK,hasDaughter);
heightsCM
dataFrame
dataFrameSubset = dataFrame[heightsCM >188]
dataFrameSubset = dataFrame[heightsCM >188,]
dataFrameSubset
mean(dataFrameSubset$weightsK)
set.seed(41)
cauchyValues <- rcauchy(100)
cauchyValues
set.seed(415)
v <- sample(cauchyValues, 10, replace=TRUE)
v
quarters = current_district.settings[:quarters]#
quarters_as_dates = {}#
quarters.each do |k, v|#
quarters_as_dates[k] = v.begin.to_date..v.end.to_date#
end
pal <- colorRampPalatte(c("red", "yellow", "blue"))
pal <- colorRampPalette(c("red", "yellow", "blue"))
x <- rnorm(100)
plot(x, col=pal(100))
plot(x, col=pal(10))
plot(x, col=pal(100))
?paste0
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/DCI Tests/2013/Analysis/R')
Makes two files for each test, facted by grade (or grade category) and#
# subject, showing schools as bars.#
#
library(ggplot2)#
library(scales)#
library(RColorBrewer)#
library(plyr)#
library(reshape2)#
library(gridExtra)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
df <- load_percs_long()#
#
for (t in test.order){#
	df.t <- subset(df, test==t & grade %in% plain.grades)#
	pdf(paste0("../Output/2013 ", t, " Scores by Grades.pdf"), width=10, height=7)#
	print(#
	ggplot(df.t, aes(x=school, y=perc, fill=level))+#
		geom_bar(stat="identity")+#
		scale_x_discrete(limits=schools)+#
		scale_y_continuous(labels = percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("School")+#
		labs(title=paste0("2013 ", t, " Scores"))+#
		facet_grid(subject ~ grade, labeller=short_labeller)+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=5, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6)#
		)#
	)#
	dev.off()#
	df.t <- subset(df, test==t & grade %in% total.grades)#
	pdf(paste0("../Output/2013 ", t, " Scores by Small Schools.pdf"), width=10, height=7)#
	print(#
	ggplot(df.t, aes(x=school, y=perc, fill=level))+#
		geom_bar(stat="identity")+#
		scale_x_discrete(limits=schools)+#
		scale_y_continuous(labels = percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("School")+#
		labs(title=paste0("2013 ", t, " Scores"))+#
		facet_grid(subject ~ grade, labeller=short_labeller)+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=5, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6)#
		)#
	)#
	dev.off()#
}
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/DCI Tests/2013/Analysis/R')
df <- load_percs_long()
str(df)
df <- read.csv(file="./../Data/percs_long.csv", head=TRUE, sep=",", na.strings=c("", " ", "  "))
str(df)
df$level <- reorder(df$level, new.order=achievement.levels)#
  df$school <- reorder(df$school, new.order=schools)#
  df$grade <- reorder(df$grade, new.order=grades.order)#
  df$test <- reorder(df$test, new.order=test.order)
df$level <- reorder(df$level, new.order=achievement.levels)
achievement_levels
achievement.levels
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/DCI Tests/2013/Analysis/R')
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/DCI Tests/2013/Analysis/R')
df <- load_percs_long()
str(df)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/DCI Tests/2013/Analysis/R')
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/DCI Tests/2013/Analysis/R')
df <- load_percs_long()
str(df)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/DCI Tests/2013/Analysis/R')
Makes two files for each test, facted by grade (or grade category) and#
# subject, showing schools as bars.#
#
library(ggplot2)#
library(scales)#
library(RColorBrewer)#
library(gridExtra)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
df <- load_percs_long()#
#
for (t in test.order){#
	df.t <- subset(df, test==t & grade %in% plain.grades)#
	pdf(paste0("../Output/2013 ", t, " Scores by Grades.pdf"), width=10, height=7)#
	print(#
	ggplot(df.t, aes(x=school, y=perc, fill=level))+#
		geom_bar(stat="identity")+#
		scale_x_discrete(limits=schools)+#
		scale_y_continuous(labels = percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("School")+#
		labs(title=paste0("2013 ", t, " Scores"))+#
		facet_grid(subject ~ grade, labeller=short_labeller)+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=5, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6)#
		)#
	)#
	dev.off()#
	df.t <- subset(df, test==t & grade %in% total.grades)#
	pdf(paste0("../Output/2013 ", t, " Scores by Small Schools.pdf"), width=10, height=7)#
	print(#
	ggplot(df.t, aes(x=school, y=perc, fill=level))+#
		geom_bar(stat="identity")+#
		scale_x_discrete(limits=schools)+#
		scale_y_continuous(labels = percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("School")+#
		labs(title=paste0("2013 ", t, " Scores"))+#
		facet_grid(subject ~ grade, labeller=short_labeller)+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=5, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6)#
		)#
	)#
	dev.off()#
}
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/DCI Tests/2013/Analysis/R')
Makes two files for each subject, faceted by school and either grade or#
# grade category#
#
library(ggplot2)#
library(scales)#
library(RColorBrewer)#
library(gridExtra)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
df <- load_percs_long()#
#
for (s in subjects){#
	df.subject <- subset(df, subject == s & grade %in% plain.grades)#
	pdf(paste("../Output/", long_labeller("subject", s), " (All Single Grades) 2013 Benchmark Scores", ".pdf", sep = ""), width=10, height=7)#
	print(#
	ggplot(df.subject, aes(x=test, y=perc, fill=level))+#
		geom_bar(stat="identity")+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels = percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("Assessment")+#
		labs(title=paste(long_labeller("subject", s), " 2013 Benchmark Scores by School and Grade", sep=""))+#
		facet_grid(school ~ grade, labeller=short_labeller)+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=5, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6)#
		)#
	)#
	dev.off()#
	df.subject <- subset(df, subject == s & grade %in% total.grades)#
	pdf(paste("../Output/", long_labeller("subject", s), " (Small Schools) 2013 Benchmark Scores", ".pdf", sep = ""), width=10, height=7)#
	print(#
	ggplot(df.subject, aes(x=test, y=perc, fill=level))+#
		geom_bar(stat="identity")+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels = percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("Assessment")+#
		labs(title=paste(long_labeller("subject", s), " 2013 Benchmark Scores by School and Grade", sep=""))+#
		facet_grid(school ~ grade, labeller=short_labeller)+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=5),#
					axis.text.y=element_text(size=6)#
		)#
	)#
	dev.off()#
}
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/DCI Tests/2013/Analysis/R')
Makes two files for each school, faceted by subject and either grade or#
# grade category#
#
library(ggplot2)#
library(scales)#
library(RColorBrewer)#
library(gridExtra)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
df <- load_percs_long()#
#
for (s in schools){#
	df.school <- subset(df, school == s & grade %in% plain.grades)#
	pdf(paste("../Output/", long_labeller("school", s), " (All Single Grades) 2013 Benchmark Scores", ".pdf", sep = ""), width=10, height=7)#
	print(#
	ggplot(df.school, aes(x=test, y=perc, fill=level))+#
		geom_bar(stat="identity")+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels = percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("Assessment")+#
		labs(title=paste(long_labeller("school", s), " 2013 Benchmark Scores by Subject and Grade", sep=""))+#
		facet_grid(subject ~ grade, labeller=short_labeller)+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=5, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6)#
		)#
	)#
	dev.off()#
	df.school <- subset(df, school==s & grade %in% total.grades)#
	pdf(paste("../Output/", long_labeller("school", s), " (Small Schools) 2013 Benchmark Scores", ".pdf", sep = ""), width=10, height=7)#
	print(#
	ggplot(df.school, aes(x=test, y=perc, fill=level))+#
		geom_bar(stat="identity")+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels = percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("Assessment")+#
		labs(title=paste(long_labeller("school", s), " 2013 Benchmark Scores by Subject and Grade", sep=""))+#
		facet_grid(subject ~ grade, labeller=short_labeller)+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=5),#
					axis.text.y=element_text(size=6)#
		)#
	)#
	dev.off()#
}
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/r')
Creates and saves a csv that has the average percent correct on each test by#
# teacher#
#
library(plyr)#
library(ggata)#
library(reshape2)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
prepare_connection()#
#
scores.enrollments.query <- "SELECT s.*,#
		e.subject subject,#
		e.grade grade,#
		e.school school,#
		e.section section,#
		t.teacher_number teacher_number,#
		t.name teacher_name,#
		tests.name test_name,#
		tests.order test_order#
FROM enrollments e#
JOIN scores s ON s.student_id = e.student_id AND e.subject = s.subject#
JOIN teachers t ON t.id = e.teacher_id#
JOIN tests ON tests.id = s.test_id"#
#
df.se <- dbGetQuery(con, scores.enrollments.query)#
#
dsum.percent <- ddply(df.se, .(teacher_number, teacher_name, school, subject, test_name, grade),#
                      summarize, average=mean(percent)#
)#
dsum.percent$test_name <- factor(dsum.percent$test_name)#
dsum.percent$test_name <- reorder(dsum.percent$test_name, new.order=test.order)#
dsum.percent <- dcast(dsum.percent, teacher_number + teacher_name + school + subject + grade ~ test_name)#
write.csv(dsum.percent, "../output/average percent correct.csv", row.names=F, na="")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/r')
Creates and saves a csv that has the average percent correct on each test by#
# teacher#
#
library(plyr)#
library(gdata)#
library(reshape2)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
prepare_connection()#
#
scores.enrollments.query <- "SELECT s.*,#
		e.subject subject,#
		e.grade grade,#
		e.school school,#
		e.section section,#
		t.teacher_number teacher_number,#
		t.name teacher_name,#
		tests.name test_name,#
		tests.order test_order#
FROM enrollments e#
JOIN scores s ON s.student_id = e.student_id AND e.subject = s.subject#
JOIN teachers t ON t.id = e.teacher_id#
JOIN tests ON tests.id = s.test_id"#
#
df.se <- dbGetQuery(con, scores.enrollments.query)#
#
dsum.percent <- ddply(df.se, .(teacher_number, teacher_name, school, subject, test_name, grade),#
                      summarize, average=mean(percent)#
)#
dsum.percent$test_name <- factor(dsum.percent$test_name)#
dsum.percent$test_name <- reorder(dsum.percent$test_name, new.order=test.order)#
dsum.percent <- dcast(dsum.percent, teacher_number + teacher_name + school + subject + grade ~ test_name)#
write.csv(dsum.percent, "../output/average percent correct.csv", row.names=F, na="")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/r')
Creates and saves a csv that has the average percent correct on each test by#
# teacher#
#
library(plyr)#
library(gdata)#
library(reshape2)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
con <- prepare_connection()#
#
scores.enrollments.query <- "SELECT s.*,#
		e.subject subject,#
		e.grade grade,#
		e.school school,#
		e.section section,#
		t.teacher_number teacher_number,#
		t.name teacher_name,#
		tests.name test_name,#
		tests.order test_order#
FROM enrollments e#
JOIN scores s ON s.student_id = e.student_id AND e.subject = s.subject#
JOIN teachers t ON t.id = e.teacher_id#
JOIN tests ON tests.id = s.test_id"#
#
df.se <- dbGetQuery(con, scores.enrollments.query)#
#
dsum.percent <- ddply(df.se, .(teacher_number, teacher_name, school, subject, test_name, grade),#
                      summarize, average=mean(percent)#
)#
dsum.percent$test_name <- factor(dsum.percent$test_name)#
dsum.percent$test_name <- reorder(dsum.percent$test_name, new.order=test.order)#
dsum.percent <- dcast(dsum.percent, teacher_number + teacher_name + school + subject + grade ~ test_name)#
write.csv(dsum.percent, "../output/average percent correct.csv", row.names=F, na="")
a <- null
a <- NA
a
is.na(a)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/r')
Creates and saves a csv that has the percent correct z score for each teacher#
#
library(plyr)#
library(gdata)#
library(reshape2)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
con <- prepare_connection()#
df.se <- get_scores_enrollments_data(con)#
#
test.info <- ddply(df.se, .(test_name, subject, grade), summarize, overall_mean=mean(percent), sd=sd(percent))#
dsum.percent <- ddply(df.se, .(teacher_number, teacher_name, school, subject, test_name, grade), summarize, average=mean(percent))#
dsum.percent$test_name <- factor(dsum.percent$test_name)#
dsum.percent$test_name <- reorder(dsum.percent$test_name, new.order=test.order)#
dsum.percent <- merge(dsum.percent, test.info)#
dsum.percent$z.score <- apply(dsum.percent, 1, function(r){#
	(as.numeric(r[['average']]) - as.numeric(r[['overall_mean']]))/as.numeric(r[['sd']])#
})#
dsum.percent <- dcast(dsum.percent,#
											teacher_number + teacher_name + school + subject + grade ~ test_name,#
											value.var="z.score"#
)#
write.csv(dsum.percent, "percent_correct_z_scores.csv", row.names=F, na="")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/r')
Creates and saves a csv that has the percent correct z score for each teacher#
#
library(plyr)#
library(gdata)#
library(reshape2)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
con <- prepare_connection()#
df.se <- get_scores_enrollments_data(con)#
#
test.info <- ddply(df.se, .(test_name, subject, grade), summarize, overall_mean=mean(percent), sd=sd(percent))#
dsum.percent <- ddply(df.se, .(teacher_number, teacher_name, school, subject, test_name, grade), summarize, average=mean(percent))#
dsum.percent$test_name <- factor(dsum.percent$test_name)#
dsum.percent$test_name <- reorder(dsum.percent$test_name, new.order=test.order)#
dsum.percent <- merge(dsum.percent, test.info)#
dsum.percent$z.score <- apply(dsum.percent, 1, function(r){#
	(as.numeric(r[['average']]) - as.numeric(r[['overall_mean']]))/as.numeric(r[['sd']])#
})#
dsum.percent <- dcast(dsum.percent,#
											teacher_number + teacher_name + school + subject + grade ~ test_name,#
											value.var="z.score"#
)#
write.csv(dsum.percent, "percent_correct_z_scores.csv", row.names=F, na="")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/r')
Creates and saves a csv that has the percent correct z score for each teacher#
#
library(plyr)#
library(gdata)#
library(reshape2)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
con <- prepare_connection()#
df.se <- get_scores_enrollments_data(con)#
#
test.info <- ddply(df.se, .(test_name, subject, grade), summarize, overall_mean=mean(percent), sd=sd(percent))#
dsum.percent <- ddply(df.se, .(teacher_number, teacher_name, school, subject, test_name, grade), summarize, average=mean(percent))#
dsum.percent$test_name <- factor(dsum.percent$test_name)#
dsum.percent$test_name <- reorder(dsum.percent$test_name, new.order=test.order)#
dsum.percent <- merge(dsum.percent, test.info)#
dsum.percent$z.score <- apply(dsum.percent, 1, function(r){#
	(as.numeric(r[['average']]) - as.numeric(r[['overall_mean']]))/as.numeric(r[['sd']])#
})#
dsum.percent <- dcast(dsum.percent,#
											teacher_number + teacher_name + school + subject + grade ~ test_name,#
											value.var="z.score"#
)#
write.csv(dsum.percent, "../output/percent_correct_z_scores.csv", row.names=F, na="")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/r')
Creates and saves a csv that has the percent correct z score for each teacher#
#
library(plyr)#
library(gdata)#
library(reshape2)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
con <- prepare_connection()#
df.se <- get_scores_enrollments_data(con)#
#
dsum.cr <- ddply(df.se, .(teacher_number, teacher_name, school, subject, test_name), summarize, cr=length(subset(on_level, on_level==T))/length(on_level) )#
dsum.cr$test_name <- factor(dsum.cr$test_name)#
dsum.cr$test_name <- reorder(dsum.cr$test_name, new.order=test.order)#
dsum.cr <- dcast(dsum.cr, teacher_number + teacher_name + school + subject ~ test_name)#
write.csv(dsum.cr, "../output/cr.csv", row.names=F, na="")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/r')
Creates and saves a csv that has the percent correct z score for each teacher#
#
library(plyr)#
library(gdata)#
library(reshape2)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
con <- prepare_connection()#
df.se <- get_scores_enrollments_data(con)#
#
dsum.ai <- ddply(df.se, .(teacher_number, teacher_name, school, subject, test_name, grade), summarize, ai=mean(ai_points))#
dsum.ai$test_name <- factor(dsum.ai$test_name)#
dsum.ai$test_name <- reorder(dsum.ai$test_name, new.order=test.order)#
dsum.ai <- dcast(dsum.ai, teacher_number + teacher_name + school + subject + grade ~ test_name)#
write.csv(dsum.ai, "../output/ai.csv", row.names=F, na="")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/r')
Creates and saves a csv that has the percent correct z score for each teacher#
library(plyr)#
library(gdata)#
library(reshape2)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
con <- prepare_connection()#
df.sg <- get_school_scores_enrollments_data(con)#
#
dsum.cr <- ddply(df.sg, .(school, grade, subject, test_name), summarize, cr=length(subset(on_level, on_level==T))/length(on_level) )#
dsum.cr$test_name <- factor(dsum.cr$test_name)#
dsum.cr$test_name <- reorder(dsum.cr$test_name, new.order=test.order)#
dsum.cr <- dcast(dsum.cr, school + grade + subject ~ test_name)#
write.csv(dsum.cr, "../output/cr_by_school_grade.csv", row.names=F, na="")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/STAR/2013/R')
Make a file that has all of the student predictions#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
export_student_model_info <- function(include.rti=F) {#
	# If include.rti is T, then the export will include all the RTI fields#
	# from the PS data, otherwise it will only include grade and school info#
	# Load data and make summary#
	df <- load_star_data()#
	df.ps <- load_ps_data()#
#
	ds <- generate_student_summaries(df, df.ps)#
#
	# Join on the PS data, including RTI info#
	if(include.rti){#
		ds <- merge(ds, df.ps)#
	}else{#
		df.ps.sub <- df.ps[, 1:7]#
		ds <- merge(ds, df.ps.sub)#
	}#
	# Add the leap prediction information#
	ds <- add_leap_predictions(ds)#
	# Write result to the spreadsheets folder#
	if(include.rti){#
		file.name <- "student STAR data with RTI info and LEAP prediction"#
	}else{#
		file.name <- "student STAR data with LEAP prediction"#
	}#
	write.csv(ds, paste0("./../Spreadsheets/", file.name, ".csv"), #
						row.names=F, na=""#
	)#
}#
#
export_student_model_info(include.rti=F)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/r')
Generate teacher profile PDFs for each teacher#
library(plyr)#
library(gdata)#
library(reshape2)#
library(ggplot2)#
library(scales)#
library(gridExtra)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
con <- prepare_connection()#
#
# Get scores by class enrollments#
df.se <- get_scores_enrollments_data(con)#
df.se$achievement_level <- gsub("AB2", "B", df.se$achievement_level)#
df.se$achievement_level <- gsub("B2", "A", df.se$achievement_level)#
df.se$achievement_level <- gsub("PF", "U", df.se$achievement_level)#
df.se$achievement_level <- gsub("F", "U", df.se$achievement_level)#
df.se$achievement_level <- gsub("ES", "A", df.se$achievement_level)#
df.se$achievement_level <- gsub("MS", "B", df.se$achievement_level)#
df.se$achievement_level <- gsub("WTS", "AB", df.se$achievement_level)#
#
# Get scores by school enrollments#
df.gsse <- get_school_scores_enrollments_data(con)#
df.gsse$achievement_level <- gsub("AB2", "B", df.gsse$achievement_level)#
df.gsse$achievement_level <- gsub("B2", "A", df.gsse$achievement_level)#
df.gsse$achievement_level <- gsub("PF", "U", df.gsse$achievement_level)#
df.gsse$achievement_level <- gsub("F", "U", df.gsse$achievement_level)#
df.gsse$achievement_level <- gsub("ES", "A", df.gsse$achievement_level)#
df.gsse$achievement_level <- gsub("MS", "B", df.gsse$achievement_level)#
df.gsse$achievement_level <- gsub("WTS", "AB", df.gsse$achievement_level)#
# Convert LEAP achievement levels to numbers so they can get a z score#
al.numbers <- data.frame(achievement_level=c("A", "M", "B", "AB", "U", "B2", "AB2", "F", "PF", "ES", "MS", "WTS"),#
												achievement_code=c(1, 0.75, 0.5, 0.25, 0, 1, 0.5, 0.25, 0, 1, 0.5, 1)#
)#
df.gsse <- merge(df.gsse, al.numbers)#
#
# Make df to highlight benchmark and leap scores#
highlights <- data.frame(test=c("MLQ1", "MLQ2", "MLQ3", "MLQ4", "MLQ5", "MLQ6", "MLQ7"),#
                        perc=c(1,1,1,1,1,1,1)#
)#
#
# Get STAR data#
df.star <- read.csv(file="../data/student star summary.csv", head=TRUE, na.string=c("", " ", "  "))#
df.e <- get_enrollments_data(con)#
df.star.e <- merge(df.star, df.e, by.x="StudentId", by.y="student_number")#
df.students <- get_students_data(con)#
df.star.s <- merge(df.star, df.students, by.x="StudentId", by.y="student_number")#
d.star.means <- ddply(df.star.s, .(subject.x, subject.y, grade), summarize,#
											mean=mean(last.modeled.gap, na.rm=T),#
											sd=sd(last.modeled.gap, na.rm=T)#
)#
#
# Get observation data#
df.obs <- get_observation_data(con)#
df.obs$quarter <- factor(df.obs$quarter)#
d.obs.means <- ddply(df.obs, .(small_school, quarter), summarize,#
										mean=mean(score, na.rm=T),#
										sd=sd(score, na.rm=T)	#
)#
all.obs.means <- ddply(df.obs, .(quarter), summarize,#
										mean=mean(score, na.rm=T),#
										sd=sd(score, na.rm=T)	#
)#
all.obs.means$small_school <- "Network"#
#
# Do the actual plotting for each teacher#
teachers <- unique(df.se$teacher_name)#
lapply(teachers, plot.teacher.summary, se.data=df.se, gsse.data=df.gsse,#
			star.data=df.star.e, highlights=highlights, star.means=d.star.means,#
			obs.data=df.obs, obs.means=d.obs.means, all.obs.means=all.obs.means#
)
str(df.star.s)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/r')
Generate teacher profile PDFs for each teacher#
library(plyr)#
library(gdata)#
library(reshape2)#
library(ggplot2)#
library(scales)#
library(gridExtra)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
con <- prepare_connection()#
#
# Get scores by class enrollments#
df.se <- get_scores_enrollments_data(con)#
df.se$achievement_level <- gsub("AB2", "B", df.se$achievement_level)#
df.se$achievement_level <- gsub("B2", "A", df.se$achievement_level)#
df.se$achievement_level <- gsub("PF", "U", df.se$achievement_level)#
df.se$achievement_level <- gsub("F", "U", df.se$achievement_level)#
df.se$achievement_level <- gsub("ES", "A", df.se$achievement_level)#
df.se$achievement_level <- gsub("MS", "B", df.se$achievement_level)#
df.se$achievement_level <- gsub("WTS", "AB", df.se$achievement_level)#
#
# Get scores by school enrollments#
df.gsse <- get_school_scores_enrollments_data(con)#
df.gsse$achievement_level <- gsub("AB2", "B", df.gsse$achievement_level)#
df.gsse$achievement_level <- gsub("B2", "A", df.gsse$achievement_level)#
df.gsse$achievement_level <- gsub("PF", "U", df.gsse$achievement_level)#
df.gsse$achievement_level <- gsub("F", "U", df.gsse$achievement_level)#
df.gsse$achievement_level <- gsub("ES", "A", df.gsse$achievement_level)#
df.gsse$achievement_level <- gsub("MS", "B", df.gsse$achievement_level)#
df.gsse$achievement_level <- gsub("WTS", "AB", df.gsse$achievement_level)#
# Convert LEAP achievement levels to numbers so they can get a z score#
al.numbers <- data.frame(achievement_level=c("A", "M", "B", "AB", "U", "B2", "AB2", "F", "PF", "ES", "MS", "WTS"),#
												achievement_code=c(1, 0.75, 0.5, 0.25, 0, 1, 0.5, 0.25, 0, 1, 0.5, 1)#
)#
df.gsse <- merge(df.gsse, al.numbers)#
#
# Make df to highlight benchmark and leap scores#
highlights <- data.frame(test=c("MLQ1", "MLQ2", "MLQ3", "MLQ4", "MLQ5", "MLQ6", "MLQ7"),#
                        perc=c(1,1,1,1,1,1,1)#
)#
#
# Get STAR data#
df.star <- read.csv(file="../data/student star summary.csv", head=TRUE, na.string=c("", " ", "  "))#
df.e <- get_enrollments_data(con)#
df.star.e <- merge(df.star, df.e, by.x="StudentId", by.y="student_number")#
df.students <- get_students_data(con)#
df.star.s <- merge(df.star, df.students, by.x="StudentId", by.y="student_number")#
d.star.means <- ddply(df.star.s, .(subject.x, subject.y, grade.y), summarize,#
											mean=mean(last.modeled.gap, na.rm=T),#
											sd=sd(last.modeled.gap, na.rm=T)#
)#
#
# Get observation data#
df.obs <- get_observation_data(con)#
df.obs$quarter <- factor(df.obs$quarter)#
d.obs.means <- ddply(df.obs, .(small_school, quarter), summarize,#
										mean=mean(score, na.rm=T),#
										sd=sd(score, na.rm=T)	#
)#
all.obs.means <- ddply(df.obs, .(quarter), summarize,#
										mean=mean(score, na.rm=T),#
										sd=sd(score, na.rm=T)	#
)#
all.obs.means$small_school <- "Network"#
#
# Do the actual plotting for each teacher#
teachers <- unique(df.se$teacher_name)#
lapply(teachers, plot.teacher.summary, se.data=df.se, gsse.data=df.gsse,#
			star.data=df.star.e, highlights=highlights, star.means=d.star.means,#
			obs.data=df.obs, obs.means=d.obs.means, all.obs.means=all.obs.means#
)
str(df.star)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/r')
library(plyr)#
library(gdata)#
library(reshape2)#
library(ggplot2)#
library(scales)#
library(gridExtra)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
con <- prepare_connection()
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/r')
df.star <- read.csv(file="../data/student star summary.csv", head=TRUE, na.string=c("", " ", "  "))
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/r')
df.e <- get_enrollments_data(con)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/r')
library(plyr)#
library(gdata)#
library(reshape2)#
library(ggplot2)#
library(scales)#
library(gridExtra)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
con <- prepare_connection()
con
