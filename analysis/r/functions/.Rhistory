mean(dataFrameSubset$weightsK)
set.seed(41)
cauchyValues <- rcauchy(100)
cauchyValues
set.seed(415)
v <- sample(cauchyValues, 10, replace=TRUE)
v
quarters = current_district.settings[:quarters]#
quarters_as_dates = {}#
quarters.each do |k, v|#
quarters_as_dates[k] = v.begin.to_date..v.end.to_date#
end
pal <- colorRampPalatte(c("red", "yellow", "blue"))
pal <- colorRampPalette(c("red", "yellow", "blue"))
x <- rnorm(100)
plot(x, col=pal(100))
plot(x, col=pal(10))
plot(x, col=pal(100))
?paste0
ls()
update.packages()
install.packages("Rcpp", type="source")#
install.packages("dplyr", type="source")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
library(plyr)#
library(gdata)#
library(reshape2)#
library(ggplot2)#
library(scales)#
library(gridExtra)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
con <- prepare_connection()
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
df.se <- get_scores_enrollments_data(con)#
df.se$achievement_level <- make_adjusted_als(df.se$achievement_level)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
df.gsse <- get_school_scores_enrollments_data(con)#
df.gsse$achievement_level <- make_adjusted_als(df.gsse$achievement_level)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
al.numbers <- data.frame(achievement_level=c("A", "M", "B", "AB", "U", "B2", "AB2", "F", "PF", "ES", "MS", "WTS"),#
												achievement_code=c(1, 0.75, 0.5, 0.25, 0, 1, 0.5, 0.25, 0, 1, 0.5, 1)#
)#
df.gsse <- merge(df.gsse, al.numbers)
str(al.numbers)
str(df.gse)
str(df.gsse)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
df.gsse <- get_school_scores_enrollments_data(con)
str(df.gsse)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
df.gsse <- get_school_scores_enrollments_data(con)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
df.star <- read.csv(file="../data/student STAR data with LEAP prediction.csv", head=TRUE, na.string=c("", " ", "  "))
str(df.star)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
df.e <- get_enrollments_data(con)
str(df.e)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
df.star.e <- merge(df.star, df.e, by.x="StudentId", by.y="student_number")
str(df.star.e)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
df.students <- get_students_data(con)
str(df.students)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
df.star.s <- merge(df.star, df.students, by.x="StudentId", by.y="student_number")
str(df.star.s)
str(df.students)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
d.star.means <- ddply(df.star.s, .(subject.x, subject.y, grade.y), summarize,#
											mean=mean(last.modeled.gap, na.rm=T),#
											sd=sd(last.modeled.gap, na.rm=T)#
)
str(d.star.means)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
df.obs <- get_observation_data(con)
str(df.obs)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
df.obs$quarter <- factor(df.obs$quarter)
str(df.obs)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
d.obs.means <- ddply(df.obs, .(small_school, quarter), summarize,#
										mean=mean(score, na.rm=T),#
										sd=sd(score, na.rm=T)	#
)
str(d.obs.means)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
df.obs <- get_observation_data(con)#
df.obs$quarter <- factor(df.obs$quarter)#
d.obs.means <- ddply(df.obs, .(small_school, quarter), summarize,#
										mean=mean(score, na.rm=T),#
										sd=sd(score, na.rm=T)	#
)
str(d.obs.means)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
df.obs <- get_observation_data(con)
str(df.obs)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
df.obs <- get_observation_data(con)#
df.obs$quarter <- factor(df.obs$quarter)#
d.obs.means <- ddply(df.obs, .(small_school, quarter), summarize,#
										mean=mean(score, na.rm=T),#
										sd=sd(score, na.rm=T)	#
)
str(d.obs.means)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
all.obs.means <- ddply(df.obs, .(quarter), summarize,#
										mean=mean(score, na.rm=T),#
										sd=sd(score, na.rm=T)	#
)
str(all.obs.means)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
all.obs.means$small_school <- "Network"
str(all.obs.means)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
teachers <- unique(df.se$teacher_name)#
lapply(teachers, plot.teacher.summary, se.data=df.se, gsse.data=df.gsse,#
			star.data=df.star.e, highlights=highlights, star.means=d.star.means,#
			obs.data=df.obs, obs.means=d.obs.means, all.obs.means=all.obs.means#
)
str(df.gsse)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
# Generate teacher profile PDFs for each teacher#
library(plyr)#
library(gdata)#
library(reshape2)#
library(ggplot2)#
library(scales)#
library(gridExtra)#
#
update_functions <- function() {#
	old.wd <- getwd()#
	setwd("functions")#
	sapply(list.files(), source)#
	setwd(old.wd)#
}#
update_functions()#
#
con <- prepare_connection()#
#
# Get scores by class enrollments#
df.se <- get_scores_enrollments_data(con)#
df.se$achievement_level <- make_adjusted_als(df.se$achievement_level)#
#
# Get scores by school enrollments#
df.gsse <- get_school_scores_enrollments_data(con)#
df.gsse$achievement_level <- make_adjusted_als(df.gsse$achievement_level)#
#
# Convert LEAP achievement levels to numbers so they can get a z score#
al.numbers <- data.frame(achievement_level=c("A", "M", "B", "AB", "U", "B2", "AB2", "F", "PF", "ES", "MS", "WTS"),#
												achievement_code=c(1, 0.75, 0.5, 0.25, 0, 1, 0.5, 0.25, 0, 1, 0.5, 1)#
)#
df.gsse <- merge(df.gsse, al.numbers)#
#
# Get STAR data#
df.star <- read.csv(file="../data/student STAR data with LEAP prediction.csv", head=TRUE, na.string=c("", " ", "  "))#
df.e <- get_enrollments_data(con)#
df.star.e <- merge(df.star, df.e, by.x="StudentId", by.y="student_number")#
df.students <- get_students_data(con)#
df.star.s <- merge(df.star, df.students, by.x="StudentId", by.y="student_number")#
d.star.means <- ddply(df.star.s, .(subject.x, subject.y, grade.y), summarize,#
											mean=mean(last.modeled.gap, na.rm=T),#
											sd=sd(last.modeled.gap, na.rm=T)#
)#
#
# Get observation data#
df.obs <- get_observation_data(con)#
df.obs$quarter <- factor(df.obs$quarter)#
d.obs.means <- ddply(df.obs, .(small_school, quarter), summarize,#
										mean=mean(score, na.rm=T),#
										sd=sd(score, na.rm=T)	#
)#
all.obs.means <- ddply(df.obs, .(quarter), summarize,#
										mean=mean(score, na.rm=T),#
										sd=sd(score, na.rm=T)	#
)#
all.obs.means$small_school <- "Network"#
#
# Do the actual plotting for each teacher#
teachers <- unique(df.se$teacher_name)#
lapply(teachers, plot.teacher.summary, se.data=df.se, gsse.data=df.gsse,#
			star.data=df.star.e, highlights=highlights, star.means=d.star.means,#
			obs.data=df.obs, obs.means=d.obs.means, all.obs.means=all.obs.means#
)
teacher.name <- Richardson, Jessica
teacher.name <- 'Richardson, Jessica'
se.data <- df.se
gsse.data <- df.gsse
star.data <- df.star
star.means=d.star.means
obs.data=df.obs
str(obs.datra)
str(obs.data)
obs.means=d.obs.means
all.obs.means=all.obs.means
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
make.num.for.z <- function(r){#
		if(is.na(r[['percent']])){#
			return(as.numeric(r[['achievement_code']]))#
		}else{#
			return(as.numeric(r[['percent']]))#
		}#
	}
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
se.t <- subset(se.data, teacher_name==teacher.name)
str(se.t)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
se.t.c <- se.t[,c("id", "achievement_level", "subject", "test_name", "grade", "percent")]
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
d.props <- ddply(se.t.c, .(grade, subject), function(d){#
		data.frame(prop.table(table(d$test_name, d$achievement_level), 1))#
	})
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
names(d.props) <- c("grade", "subject", "test", "achievement_level", "perc")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
d.props$achievement_level <- reorder(d.props$achievement_level,#
																new.order=c("A", "M", "B", "AB", "U")#
	)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
d.props <- d.props[order(as.numeric(d.props$achievement_level)),]
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
b.above <- subset(d.props, achievement_level %in% c("A", "M", "B"))#
	b.above <- ddply(b.above, .(grade, subject, test), summarize, perc=sum(perc))
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
p.bars <- ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=percent), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels=percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("Assessment")+#
		labs(title="Benchmark Percents at Achievement Levels and Percent Correct Boxplot")+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=6, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6),#
					title=element_text(size=7)#
		)+#
		facet_grid(subject + grade ~ .)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
b.above.l13 <- subset(b.above, test=="L13")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
if(nrow(b.above.l13) > 0){#
		p.bars  <- p.bars + geom_hline(data=b.above.l13,#
																		aes(yintercept=perc+.1), linetype=3#
		)#
	}
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
al.numbers <- data.frame(achievement_level=c("A", "M", "B", "AB", "U", "B2", "AB2", "F", "PF", "ES", "MS", "WTS"),#
													achievement_code=c(1, 0.75, 0.5, 0.25, 0, 1, 0.5, 0.25, 0, 1, 0.5, 1)#
	)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
gsse.data$num.for.z <- apply(gsse.data, 1, make.num.for.z)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
test.info <- ddply(gsse.data, .(test_name, subject, grade), summarize, overall_mean=mean(num.for.z), sd=sd(num.for.z))
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
se.t.c <- se.t[,c("id", "teacher_name", "achievement_level", "subject", "test_name", "grade", "percent", "scaled_score")]
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
se.t.c <- merge(se.t.c, al.numbers)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
se.t.c$num.for.z <- apply(se.t.c, 1, make.num.for.z)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
d.mean <- ddply(se.t.c, .(subject, test_name, grade), summarize, average=mean(num.for.z))
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
d.mean <- merge(d.mean, test.info)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
d.mean$z.score <- apply(d.mean, 1, function(r){#
		(as.numeric(r[['average']]) - as.numeric(r[['overall_mean']]))/as.numeric(r[['sd']])#
	})
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
color.codes <- data.frame(test_name=c("L13", "MLQ1", "MLQ2", "MLQ3", "B1", "MLQ4", "MLQ5", "B2", "MLQ6", "MLQ7", "B3", "PL", "L14", "B4"),#
														color.code=c("blue", "black", "black", "black", "blue", "black", "black", "blue", "black", "black", "blue", "black", "blue", "black")#
	)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
d.mean <- merge(d.mean, color.codes)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
p.z <- ggplot(d.mean)+#
		geom_line(aes(x=test_name, y=z.score, group=grade))+#
		geom_point(aes(x=test_name, y=z.score, color=color.code), size=3)+#
		geom_hline(yintercept=0)+#
		scale_color_manual(values=c("black", "#00A6FF"), guide=F)+#
		scale_y_continuous()+#
		scale_x_discrete(limits=test.order)+#
		ylab("Z Score")+#
		labs(title="Benchmark Percent Correct Z-Scores")+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=6, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6),#
					axis.title.x=element_blank(),#
					title=element_text(size=7)#
		)+#
		facet_grid(subject + grade ~ .)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
d.star <- subset(star.data, teacher_name==teacher.name)
str(d.star)
str(df.star)
str(star.data)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
star.data=df.star.e
str(star.data)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
d.star <- subset(star.data, teacher_name==teacher.name)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
star.plot <- function(d, all.means) {#
		t.means <- ddply(d, .(grade.y, subject.x, subject.y), summarize,#
													mean=mean(last.modeled.gap, na.rm=T)#
		)#
		all.means.sub <- subset(all.means, subject.y %in% unique(d$subject.y) & #
														subject.x %in% unique(d$subject.x) &#
														grade.y %in% unique(d$grade.y) &#
														!is.na(sd)#
		)#
		ggplot(d, aes(x=last.modeled.gap))+#
			geom_bar(aes(y = ..density..), colour="black", binwidth=1)+#
			geom_vline(data=t.means, mapping=aes(xintercept=mean), color="red")+#
			geom_vline(data=all.means.sub, mapping=aes(xintercept=c(mean+sd,mean,mean-sd)),#
								color="blue", linetype=c(2,1,2)#
			)+#
			scale_y_continuous(labels=percent)+#
			scale_x_continuous(breaks=seq(-10,10,1))+#
			theme_bw()+#
			labs(title=paste0("STAR Gap from Grade Level, Latest Modeled Value"),#
						x="STAR Gap from Grade Level in Years (negative is below)",#
						y="Percent of Students"#
			)+#
			theme(title=element_text(size=6),#
						axis.text.y=element_text(size=6),#
						axis.text.x=element_text(size=6)#
			)+#
			facet_grid(subject.y + grade.y ~ subject.x)#
	}#
	if(nrow(d.star)>0){#
		stars <- star.plot(d.star, star.means)#
	}else{#
		stars <- grob()#
	}
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
d.obs <- subset(obs.data, name==teacher.name)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
if(nrow(d.obs) > 0){#
		obs.means.s <- drop.levels(subset(obs.means, small_school %in% unique(d.obs$small_school)))#
		obs.means.a <- rbind(obs.means.s, all.obs.means)#
		p.obs <- ggplot()+#
			geom_point(data=obs.means.a, aes(x=quarter, y=mean, color=small_school),#
									shape=1, position=position_dodge(.1)#
			)+#
			geom_errorbar(data=obs.means.a, aes(x=quarter, ymin=mean-sd, ymax=mean+sd,#
										color=small_school), width=0.5, position=position_dodge(.1)#
			)+#
			geom_point(data=d.obs, aes(x=quarter, y=score), shape=18, size=4, color="red")+#
			scale_y_continuous(limits=c(1,5), breaks=seq(1,5,0.5))+#
			scale_color_manual(values=c("#1B9E77", "#D95F02"), name="Mean and SD")+#
			labs(title="Quarterly Observation Scores",#
					x="Quarter",#
					y="Score"#
			)+#
			coord_flip()+#
			theme_bw()+#
			theme(title=element_text(size=6),#
						axis.text.y=element_text(size=6),#
						axis.text.x=element_text(size=6),#
						legend.title=element_text(size=6),#
						legend.text=element_text(size=6)#
			)#
	}else{#
		p.obs <- grob()#
	}
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
right.side <- arrangeGrob(p.z, stars, p.obs, ncol=1)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
p <- arrangeGrob(p.bars, right.side, ncol=2,#
										# widths=c(0.67, 0.33),#
										main=paste0("\n2013-14 Teacher Profile - ", teacher.name)#
	)
p.bars
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=percent), alpha=0.01, width=0.5)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")
str(se.t.c)
se.t.c
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
se.t.c$perc_or_al_num <- apply(se.t.c, 1, function(r){#
    if(is.na(r['percent'])){#
      return(r['achievement_code'])#
    }else{#
      return(r['percent'])#
    }#
  })
str(se.t.c)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
se.t.c$perc_or_al_num <- apply(se.t.c, 1, function(r){#
    if(is.na(r['percent'])){#
      return(as.numeric(r['achievement_code']))#
    }else{#
      return(as.numerics(r['percent']))#
    }#
  })
str(se.t.c)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)
plot.teacher.summary('Richardson, Jessica', se.data=df.se, gsse.data=df.gsse,#
star.data=df.star.e, highlights=highlights, star.means=d.star.means,#
obs.data=df.obs, obs.means=d.obs.means, all.obs.means=all.obs.means)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
update_functions()
plot.teacher.summary('Richardson, Jessica', se.data=df.se, gsse.data=df.gsse,#
star.data=df.star.e, highlights=highlights, star.means=d.star.means,#
obs.data=df.obs, obs.means=d.obs.means, all.obs.means=all.obs.means)
teacher.summary.plot.38(teacher.name, se.data, gsse.data, star.data,#
																	highlights, star.means, obs.data, obs.means,#
																	all.obs.means)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R')
update_functions()
teacher.summary.plot.38(teacher.name, se.data, gsse.data, star.data,#
																	highlights, star.means, obs.data, obs.means,#
																	all.obs.means)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
make.num.for.z <- function(r){#
		if(is.na(r[['percent']])){#
			return(as.numeric(r[['achievement_code']]))#
		}else{#
			return(as.numeric(r[['percent']]))#
		}#
	}#
  # AL bars plot for DCI tests#
  se.t <- subset(se.data, teacher_name==teacher.name)#
	se.t.c <- se.t[,c("id", "achievement_level", "subject", "test_name", "grade", "percent")]#
  se.t.c$perc_or_al_num <- apply(se.t.c, 1, function(r){#
    if(is.na(r['percent'])){#
      return(as.numeric(r['achievement_code']))#
    }else{#
      return(as.numerics(r['percent']))#
    }#
  })#
	d.props <- ddply(se.t.c, .(grade, subject), function(d){#
		data.frame(prop.table(table(d$test_name, d$achievement_level), 1))#
	})#
	names(d.props) <- c("grade", "subject", "test", "achievement_level", "perc")#
	d.props$achievement_level <- reorder(d.props$achievement_level,#
																new.order=c("A", "M", "B", "AB", "U")#
	)#
	d.props <- d.props[order(as.numeric(d.props$achievement_level)),]#
	b.above <- subset(d.props, achievement_level %in% c("A", "M", "B"))#
	b.above <- ddply(b.above, .(grade, subject, test), summarize, perc=sum(perc))#
	p.bars <- ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels=percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("Assessment")+#
		labs(title="Benchmark Percents at Achievement Levels and Percent Correct Boxplot")+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=6, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6),#
					title=element_text(size=7)#
		)+#
		facet_grid(subject + grade ~ .)#
	b.above.l13 <- subset(b.above, test=="L13")#
	if(nrow(b.above.l13) > 0){#
		p.bars  <- p.bars + geom_hline(data=b.above.l13,#
																		aes(yintercept=perc+.1), linetype=3#
		)#
	}#
#
	# Z-scores plot#
	al.numbers <- data.frame(achievement_level=c("A", "M", "B", "AB", "U", "B2", "AB2", "F", "PF", "ES", "MS", "WTS"),#
													achievement_code=c(1, 0.75, 0.5, 0.25, 0, 1, 0.5, 0.25, 0, 1, 0.5, 1)#
	)#
	gsse.data$num.for.z <- apply(gsse.data, 1, make.num.for.z)#
	test.info <- ddply(gsse.data, .(test_name, subject, grade), summarize, overall_mean=mean(num.for.z), sd=sd(num.for.z))#
	se.t.c <- se.t[,c("id", "teacher_name", "achievement_level", "subject", "test_name", "grade", "percent", "scaled_score")]#
	se.t.c <- merge(se.t.c, al.numbers)#
	se.t.c$num.for.z <- apply(se.t.c, 1, make.num.for.z)#
	d.mean <- ddply(se.t.c, .(subject, test_name, grade), summarize, average=mean(num.for.z))#
	d.mean <- merge(d.mean, test.info)#
	d.mean$z.score <- apply(d.mean, 1, function(r){#
		(as.numeric(r[['average']]) - as.numeric(r[['overall_mean']]))/as.numeric(r[['sd']])#
	})#
	color.codes <- data.frame(test_name=c("L13", "MLQ1", "MLQ2", "MLQ3", "B1", "MLQ4", "MLQ5", "B2", "MLQ6", "MLQ7", "B3", "PL", "L14", "B4"),#
														color.code=c("blue", "black", "black", "black", "blue", "black", "black", "blue", "black", "black", "blue", "black", "blue", "black")#
	)#
	d.mean <- merge(d.mean, color.codes)#
	p.z <- ggplot(d.mean)+#
		geom_line(aes(x=test_name, y=z.score, group=grade))+#
		geom_point(aes(x=test_name, y=z.score, color=color.code), size=3)+#
		geom_hline(yintercept=0)+#
		scale_color_manual(values=c("black", "#00A6FF"), guide=F)+#
		scale_y_continuous()+#
		scale_x_discrete(limits=test.order)+#
		ylab("Z Score")+#
		labs(title="Benchmark Percent Correct Z-Scores")+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=6, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6),#
					axis.title.x=element_blank(),#
					title=element_text(size=7)#
		)+#
		facet_grid(subject + grade ~ .)#
  # STAR plots#
  d.star <- subset(star.data, teacher_name==teacher.name)#
	star.plot <- function(d, all.means) {#
		t.means <- ddply(d, .(grade.y, subject.x, subject.y), summarize,#
													mean=mean(last.modeled.gap, na.rm=T)#
		)#
		all.means.sub <- subset(all.means, subject.y %in% unique(d$subject.y) & #
														subject.x %in% unique(d$subject.x) &#
														grade.y %in% unique(d$grade.y) &#
														!is.na(sd)#
		)#
		ggplot(d, aes(x=last.modeled.gap))+#
			geom_bar(aes(y = ..density..), colour="black", binwidth=1)+#
			geom_vline(data=t.means, mapping=aes(xintercept=mean), color="red")+#
			geom_vline(data=all.means.sub, mapping=aes(xintercept=c(mean+sd,mean,mean-sd)),#
								color="blue", linetype=c(2,1,2)#
			)+#
			scale_y_continuous(labels=percent)+#
			scale_x_continuous(breaks=seq(-10,10,1))+#
			theme_bw()+#
			labs(title=paste0("STAR Gap from Grade Level, Latest Modeled Value"),#
						x="STAR Gap from Grade Level in Years (negative is below)",#
						y="Percent of Students"#
			)+#
			theme(title=element_text(size=6),#
						axis.text.y=element_text(size=6),#
						axis.text.x=element_text(size=6)#
			)+#
			facet_grid(subject.y + grade.y ~ subject.x)#
	}#
	if(nrow(d.star)>0){#
		stars <- star.plot(d.star, star.means)#
	}else{#
		stars <- grob()#
	}#
  # Observation scores plot#
  d.obs <- subset(obs.data, name==teacher.name)#
	if(nrow(d.obs) > 0){#
		obs.means.s <- drop.levels(subset(obs.means, small_school %in% unique(d.obs$small_school)))#
		obs.means.a <- rbind(obs.means.s, all.obs.means)#
		p.obs <- ggplot()+#
			geom_point(data=obs.means.a, aes(x=quarter, y=mean, color=small_school),#
									shape=1, position=position_dodge(.1)#
			)+#
			geom_errorbar(data=obs.means.a, aes(x=quarter, ymin=mean-sd, ymax=mean+sd,#
										color=small_school), width=0.5, position=position_dodge(.1)#
			)+#
			geom_point(data=d.obs, aes(x=quarter, y=score), shape=18, size=4, color="red")+#
			scale_y_continuous(limits=c(1,5), breaks=seq(1,5,0.5))+#
			scale_color_manual(values=c("#1B9E77", "#D95F02"), name="Mean and SD")+#
			labs(title="Quarterly Observation Scores",#
					x="Quarter",#
					y="Score"#
			)+#
			coord_flip()+#
			theme_bw()+#
			theme(title=element_text(size=6),#
						axis.text.y=element_text(size=6),#
						axis.text.x=element_text(size=6),#
						legend.title=element_text(size=6),#
						legend.text=element_text(size=6)#
			)#
	}else{#
		p.obs <- grob()#
	}#
	right.side <- arrangeGrob(p.z, stars, p.obs, ncol=1)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
p <- arrangeGrob(p.bars, right.side, ncol=2,#
										# widths=c(0.67, 0.33),#
										main=paste0("\n2013-14 Teacher Profile - ", teacher.name)#
	)
p.bars
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
se.t.c$perc_or_al_num <- apply(se.t.c, 1, function(r){#
    if(is.na(r['percent'])){#
      return(as.numeric(r['achievement_code']))#
    }else{#
      return(as.numerics(r['percent']))#
    }#
  })
str(se.t.c)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)+#
		scale_x_discrete(limits=test.order)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels=percent, breaks=seq(0,1,.1))
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels=percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels=percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels=percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("Assessment")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels=percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("Assessment")+#
		labs(title="Benchmark Percents at Achievement Levels and Percent Correct Boxplot")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels=percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("Assessment")+#
		labs(title="Benchmark Percents at Achievement Levels and Percent Correct Boxplot")+#
		theme_bw()
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels=percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("Assessment")+#
		labs(title="Benchmark Percents at Achievement Levels and Percent Correct Boxplot")+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=6, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6),#
					title=element_text(size=7)#
		)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels=percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("Assessment")+#
		labs(title="Benchmark Percents at Achievement Levels and Percent Correct Boxplot")+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=6, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6),#
					title=element_text(size=7)#
		)+#
		facet_grid(subject + grade ~ .)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
p.bars <- ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels=percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("Assessment")+#
		labs(title="Benchmark Percents at Achievement Levels and Percent Correct Boxplot")+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=6, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6),#
					title=element_text(size=7)#
		)+#
		facet_grid(subject + grade ~ .)
p.bars
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
make.num.for.z <- function(r){#
		if(is.na(r[['percent']])){#
			return(as.numeric(r[['achievement_code']]))#
		}else{#
			return(as.numeric(r[['percent']]))#
		}#
	}#
  # AL bars plot for DCI tests#
  se.t <- subset(se.data, teacher_name==teacher.name)#
	se.t.c <- se.t[,c("id", "achievement_level", "subject", "test_name", "grade", "percent")]#
  se.t.c$perc_or_al_num <- apply(se.t.c, 1, function(r){#
    if(is.na(r['percent'])){#
      return(as.numeric(r['achievement_code']))#
    }else{#
      return(as.numerics(r['percent']))#
    }#
  })#
	d.props <- ddply(se.t.c, .(grade, subject), function(d){#
		data.frame(prop.table(table(d$test_name, d$achievement_level), 1))#
	})#
	names(d.props) <- c("grade", "subject", "test", "achievement_level", "perc")#
	d.props$achievement_level <- reorder(d.props$achievement_level,#
																new.order=c("A", "M", "B", "AB", "U")#
	)#
	d.props <- d.props[order(as.numeric(d.props$achievement_level)),]#
	b.above <- subset(d.props, achievement_level %in% c("A", "M", "B"))#
	b.above <- ddply(b.above, .(grade, subject, test), summarize, perc=sum(perc))#
	p.bars <- ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels=percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("Assessment")+#
		labs(title="Benchmark Percents at Achievement Levels and Percent Correct Boxplot")+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=6, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6),#
					title=element_text(size=7)#
		)+#
		facet_grid(subject + grade ~ .)#
	b.above.l13 <- subset(b.above, test=="L13")#
	if(nrow(b.above.l13) > 0){#
		p.bars  <- p.bars + geom_hline(data=b.above.l13,#
																		aes(yintercept=perc+.1), linetype=3#
		)#
	}#
#
	# Z-scores plot#
	al.numbers <- data.frame(achievement_level=c("A", "M", "B", "AB", "U", "B2", "AB2", "F", "PF", "ES", "MS", "WTS"),#
													achievement_code=c(1, 0.75, 0.5, 0.25, 0, 1, 0.5, 0.25, 0, 1, 0.5, 1)#
	)#
	gsse.data$num.for.z <- apply(gsse.data, 1, make.num.for.z)#
	test.info <- ddply(gsse.data, .(test_name, subject, grade), summarize, overall_mean=mean(num.for.z), sd=sd(num.for.z))#
	se.t.c <- se.t[,c("id", "teacher_name", "achievement_level", "subject", "test_name", "grade", "percent", "scaled_score")]#
	se.t.c <- merge(se.t.c, al.numbers)#
	se.t.c$num.for.z <- apply(se.t.c, 1, make.num.for.z)#
	d.mean <- ddply(se.t.c, .(subject, test_name, grade), summarize, average=mean(num.for.z))#
	d.mean <- merge(d.mean, test.info)#
	d.mean$z.score <- apply(d.mean, 1, function(r){#
		(as.numeric(r[['average']]) - as.numeric(r[['overall_mean']]))/as.numeric(r[['sd']])#
	})#
	color.codes <- data.frame(test_name=c("L13", "MLQ1", "MLQ2", "MLQ3", "B1", "MLQ4", "MLQ5", "B2", "MLQ6", "MLQ7", "B3", "PL", "L14", "B4"),#
														color.code=c("blue", "black", "black", "black", "blue", "black", "black", "blue", "black", "black", "blue", "black", "blue", "black")#
	)#
	d.mean <- merge(d.mean, color.codes)#
	p.z <- ggplot(d.mean)+#
		geom_line(aes(x=test_name, y=z.score, group=grade))+#
		geom_point(aes(x=test_name, y=z.score, color=color.code), size=3)+#
		geom_hline(yintercept=0)+#
		scale_color_manual(values=c("black", "#00A6FF"), guide=F)+#
		scale_y_continuous()+#
		scale_x_discrete(limits=test.order)+#
		ylab("Z Score")+#
		labs(title="Benchmark Percent Correct Z-Scores")+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=6, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6),#
					axis.title.x=element_blank(),#
					title=element_text(size=7)#
		)+#
		facet_grid(subject + grade ~ .)#
  # STAR plots#
  d.star <- subset(star.data, teacher_name==teacher.name)#
	star.plot <- function(d, all.means) {#
		t.means <- ddply(d, .(grade.y, subject.x, subject.y), summarize,#
													mean=mean(last.modeled.gap, na.rm=T)#
		)#
		all.means.sub <- subset(all.means, subject.y %in% unique(d$subject.y) & #
														subject.x %in% unique(d$subject.x) &#
														grade.y %in% unique(d$grade.y) &#
														!is.na(sd)#
		)#
		ggplot(d, aes(x=last.modeled.gap))+#
			geom_bar(aes(y = ..density..), colour="black", binwidth=1)+#
			geom_vline(data=t.means, mapping=aes(xintercept=mean), color="red")+#
			geom_vline(data=all.means.sub, mapping=aes(xintercept=c(mean+sd,mean,mean-sd)),#
								color="blue", linetype=c(2,1,2)#
			)+#
			scale_y_continuous(labels=percent)+#
			scale_x_continuous(breaks=seq(-10,10,1))+#
			theme_bw()+#
			labs(title=paste0("STAR Gap from Grade Level, Latest Modeled Value"),#
						x="STAR Gap from Grade Level in Years (negative is below)",#
						y="Percent of Students"#
			)+#
			theme(title=element_text(size=6),#
						axis.text.y=element_text(size=6),#
						axis.text.x=element_text(size=6)#
			)+#
			facet_grid(subject.y + grade.y ~ subject.x)#
	}#
	if(nrow(d.star)>0){#
		stars <- star.plot(d.star, star.means)#
	}else{#
		stars <- grob()#
	}#
  # Observation scores plot#
  d.obs <- subset(obs.data, name==teacher.name)#
	if(nrow(d.obs) > 0){#
		obs.means.s <- drop.levels(subset(obs.means, small_school %in% unique(d.obs$small_school)))#
		obs.means.a <- rbind(obs.means.s, all.obs.means)#
		p.obs <- ggplot()+#
			geom_point(data=obs.means.a, aes(x=quarter, y=mean, color=small_school),#
									shape=1, position=position_dodge(.1)#
			)+#
			geom_errorbar(data=obs.means.a, aes(x=quarter, ymin=mean-sd, ymax=mean+sd,#
										color=small_school), width=0.5, position=position_dodge(.1)#
			)+#
			geom_point(data=d.obs, aes(x=quarter, y=score), shape=18, size=4, color="red")+#
			scale_y_continuous(limits=c(1,5), breaks=seq(1,5,0.5))+#
			scale_color_manual(values=c("#1B9E77", "#D95F02"), name="Mean and SD")+#
			labs(title="Quarterly Observation Scores",#
					x="Quarter",#
					y="Score"#
			)+#
			coord_flip()+#
			theme_bw()+#
			theme(title=element_text(size=6),#
						axis.text.y=element_text(size=6),#
						axis.text.x=element_text(size=6),#
						legend.title=element_text(size=6),#
						legend.text=element_text(size=6)#
			)#
	}else{#
		p.obs <- grob()#
	}#
	right.side <- arrangeGrob(p.z, stars, p.obs, ncol=1)#
	p <- arrangeGrob(p.bars, right.side, ncol=2,#
										# widths=c(0.67, 0.33),#
										main=paste0("\n2013-14 Teacher Profile - ", teacher.name)#
	)
p.bars
se.t.c
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
make.num.for.z <- function(r){#
		if(is.na(r[['percent']])){#
			return(as.numeric(r[['achievement_code']]))#
		}else{#
			return(as.numeric(r[['percent']]))#
		}#
	}#
  # AL bars plot for DCI tests#
  se.t <- subset(se.data, teacher_name==teacher.name)#
	se.t.c <- se.t[,c("id", "achievement_level", "subject", "test_name", "grade", "percent")]#
  se.t.c$perc_or_al_num <- apply(se.t.c, 1, function(r){#
    if(is.na(r['percent'])){#
      return(as.numeric(r['achievement_code']))#
    }else{#
      return(as.numerics(r['percent']))#
    }#
  })#
	d.props <- ddply(se.t.c, .(grade, subject), function(d){#
		data.frame(prop.table(table(d$test_name, d$achievement_level), 1))#
	})#
	names(d.props) <- c("grade", "subject", "test", "achievement_level", "perc")#
	d.props$achievement_level <- reorder(d.props$achievement_level,#
																new.order=c("A", "M", "B", "AB", "U")#
	)#
	d.props <- d.props[order(as.numeric(d.props$achievement_level)),]#
	b.above <- subset(d.props, achievement_level %in% c("A", "M", "B"))#
	b.above <- ddply(b.above, .(grade, subject, test), summarize, perc=sum(perc))#
	p.bars <- ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels=percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("Assessment")+#
		labs(title="Benchmark Percents at Achievement Levels and Percent Correct Boxplot")+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=6, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6),#
					title=element_text(size=7)#
		)+#
		facet_grid(subject + grade ~ .)#
	b.above.l13 <- subset(b.above, test=="L13")#
	if(nrow(b.above.l13) > 0){#
		p.bars  <- p.bars + geom_hline(data=b.above.l13,#
																		aes(yintercept=perc+.1), linetype=3#
		)#
	}#
#
	# Z-scores plot#
	al.numbers <- data.frame(achievement_level=c("A", "M", "B", "AB", "U", "B2", "AB2", "F", "PF", "ES", "MS", "WTS"),#
													achievement_code=c(1, 0.75, 0.5, 0.25, 0, 1, 0.5, 0.25, 0, 1, 0.5, 1)#
	)#
	gsse.data$num.for.z <- apply(gsse.data, 1, make.num.for.z)#
	test.info <- ddply(gsse.data, .(test_name, subject, grade), summarize, overall_mean=mean(num.for.z), sd=sd(num.for.z))#
	gsse.t.c <- gsse.t[,c("id", "teacher_name", "achievement_level", "subject", "test_name", "grade", "percent", "scaled_score")]#
	gsse.t.c <- merge(gsse.t.c, al.numbers)#
	gsse.t.c$num.for.z <- apply(gsse.t.c, 1, make.num.for.z)#
	d.mean <- ddply(gsse.t.c, .(subject, test_name, grade), summarize, average=mean(num.for.z))#
	d.mean <- merge(d.mean, test.info)#
	d.mean$z.score <- apply(d.mean, 1, function(r){#
		(as.numeric(r[['average']]) - as.numeric(r[['overall_mean']]))/as.numeric(r[['sd']])#
	})#
	color.codes <- data.frame(test_name=c("L13", "MLQ1", "MLQ2", "MLQ3", "B1", "MLQ4", "MLQ5", "B2", "MLQ6", "MLQ7", "B3", "PL", "L14", "B4"),#
														color.code=c("blue", "black", "black", "black", "blue", "black", "black", "blue", "black", "black", "blue", "black", "blue", "black")#
	)#
	d.mean <- merge(d.mean, color.codes)#
	p.z <- ggplot(d.mean)+#
		geom_line(aes(x=test_name, y=z.score, group=grade))+#
		geom_point(aes(x=test_name, y=z.score, color=color.code), size=3)+#
		geom_hline(yintercept=0)+#
		scale_color_manual(values=c("black", "#00A6FF"), guide=F)+#
		scale_y_continuous()+#
		scale_x_discrete(limits=test.order)+#
		ylab("Z Score")+#
		labs(title="Benchmark Percent Correct Z-Scores")+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=6, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6),#
					axis.title.x=element_blank(),#
					title=element_text(size=7)#
		)+#
		facet_grid(subject + grade ~ .)#
  # STAR plots#
  d.star <- subset(star.data, teacher_name==teacher.name)#
	star.plot <- function(d, all.means) {#
		t.means <- ddply(d, .(grade.y, subject.x, subject.y), summarize,#
													mean=mean(last.modeled.gap, na.rm=T)#
		)#
		all.means.sub <- subset(all.means, subject.y %in% unique(d$subject.y) & #
														subject.x %in% unique(d$subject.x) &#
														grade.y %in% unique(d$grade.y) &#
														!is.na(sd)#
		)#
		ggplot(d, aes(x=last.modeled.gap))+#
			geom_bar(aes(y = ..density..), colour="black", binwidth=1)+#
			geom_vline(data=t.means, mapping=aes(xintercept=mean), color="red")+#
			geom_vline(data=all.means.sub, mapping=aes(xintercept=c(mean+sd,mean,mean-sd)),#
								color="blue", linetype=c(2,1,2)#
			)+#
			scale_y_continuous(labels=percent)+#
			scale_x_continuous(breaks=seq(-10,10,1))+#
			theme_bw()+#
			labs(title=paste0("STAR Gap from Grade Level, Latest Modeled Value"),#
						x="STAR Gap from Grade Level in Years (negative is below)",#
						y="Percent of Students"#
			)+#
			theme(title=element_text(size=6),#
						axis.text.y=element_text(size=6),#
						axis.text.x=element_text(size=6)#
			)+#
			facet_grid(subject.y + grade.y ~ subject.x)#
	}#
	if(nrow(d.star)>0){#
		stars <- star.plot(d.star, star.means)#
	}else{#
		stars <- grob()#
	}#
  # Observation scores plot#
  d.obs <- subset(obs.data, name==teacher.name)#
	if(nrow(d.obs) > 0){#
		obs.means.s <- drop.levels(subset(obs.means, small_school %in% unique(d.obs$small_school)))#
		obs.means.a <- rbind(obs.means.s, all.obs.means)#
		p.obs <- ggplot()+#
			geom_point(data=obs.means.a, aes(x=quarter, y=mean, color=small_school),#
									shape=1, position=position_dodge(.1)#
			)+#
			geom_errorbar(data=obs.means.a, aes(x=quarter, ymin=mean-sd, ymax=mean+sd,#
										color=small_school), width=0.5, position=position_dodge(.1)#
			)+#
			geom_point(data=d.obs, aes(x=quarter, y=score), shape=18, size=4, color="red")+#
			scale_y_continuous(limits=c(1,5), breaks=seq(1,5,0.5))+#
			scale_color_manual(values=c("#1B9E77", "#D95F02"), name="Mean and SD")+#
			labs(title="Quarterly Observation Scores",#
					x="Quarter",#
					y="Score"#
			)+#
			coord_flip()+#
			theme_bw()+#
			theme(title=element_text(size=6),#
						axis.text.y=element_text(size=6),#
						axis.text.x=element_text(size=6),#
						legend.title=element_text(size=6),#
						legend.text=element_text(size=6)#
			)#
	}else{#
		p.obs <- grob()#
	}#
	right.side <- arrangeGrob(p.z, stars, p.obs, ncol=1)#
	p <- arrangeGrob(p.bars, right.side, ncol=2,#
										# widths=c(0.67, 0.33),#
										main=paste0("\n2013-14 Teacher Profile - ", teacher.name)#
	)
p.bars
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)
se.t.c
se.t.c
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
se.t <- subset(se.data, teacher_name==teacher.name)#
	se.t.c <- se.t[,c("id", "achievement_level", "subject", "test_name", "grade", "percent")]
se.t.c
se.t
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
se.t.c <- se.t[,c("id", "achievement_level", "subject", "test_name", "grade", "percent")]
se.t.c
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
al.numbers <- data.frame(achievement_level=c("A", "M", "B", "AB", "U", "B2", "AB2", "F", "PF", "ES", "MS", "WTS"),#
												achievement_code=c(1, 0.75, 0.5, 0.25, 0, 1, 0.5, 0.25, 0, 1, 0.5, 1)#
)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
make.num.for.z <- function(r){#
		if(is.na(r[['percent']])){#
			return(as.numeric(r[['achievement_code']]))#
		}else{#
			return(as.numeric(r[['percent']]))#
		}#
	}#
  # AL bars plot for DCI tests#
  se.t <- subset(se.data, teacher_name==teacher.name)#
	se.t.c <- se.t[,c("id", "achievement_level", "subject", "test_name", "grade", "percent")]#
  se.t.c <- merge(se.t.c, al.numbers)#
  se.t.c$perc_or_al_num <- apply(se.t.c, 1, function(r){#
    if(is.na(r['percent'])){#
      return(as.numeric(r['achievement_code']))#
    }else{#
      return(as.numerics(r['percent']))#
    }#
  })#
	d.props <- ddply(se.t.c, .(grade, subject), function(d){#
		data.frame(prop.table(table(d$test_name, d$achievement_level), 1))#
	})#
	names(d.props) <- c("grade", "subject", "test", "achievement_level", "perc")#
	d.props$achievement_level <- reorder(d.props$achievement_level,#
																new.order=c("A", "M", "B", "AB", "U")#
	)#
	d.props <- d.props[order(as.numeric(d.props$achievement_level)),]#
	b.above <- subset(d.props, achievement_level %in% c("A", "M", "B"))#
	b.above <- ddply(b.above, .(grade, subject, test), summarize, perc=sum(perc))#
	p.bars <- ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels=percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("Assessment")+#
		labs(title="Benchmark Percents at Achievement Levels and Percent Correct Boxplot")+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=6, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6),#
					title=element_text(size=7)#
		)+#
		facet_grid(subject + grade ~ .)#
	b.above.l13 <- subset(b.above, test=="L13")#
	if(nrow(b.above.l13) > 0){#
		p.bars  <- p.bars + geom_hline(data=b.above.l13,#
																		aes(yintercept=perc+.1), linetype=3#
		)#
	}#
#
	# Z-scores plot#
	gsse.data$num.for.z <- apply(gsse.data, 1, make.num.for.z)#
	test.info <- ddply(gsse.data, .(test_name, subject, grade), summarize, overall_mean=mean(num.for.z), sd=sd(num.for.z))#
	gsse.t.c <- gsse.t[,c("id", "teacher_name", "achievement_level", "subject", "test_name", "grade", "percent", "scaled_score")]#
	gsse.t.c <- merge(gsse.t.c, al.numbers)#
	gsse.t.c$num.for.z <- apply(gsse.t.c, 1, make.num.for.z)#
	d.mean <- ddply(gsse.t.c, .(subject, test_name, grade), summarize, average=mean(num.for.z))#
	d.mean <- merge(d.mean, test.info)#
	d.mean$z.score <- apply(d.mean, 1, function(r){#
		(as.numeric(r[['average']]) - as.numeric(r[['overall_mean']]))/as.numeric(r[['sd']])#
	})#
	color.codes <- data.frame(test_name=c("L13", "MLQ1", "MLQ2", "MLQ3", "B1", "MLQ4", "MLQ5", "B2", "MLQ6", "MLQ7", "B3", "PL", "L14", "B4"),#
														color.code=c("blue", "black", "black", "black", "blue", "black", "black", "blue", "black", "black", "blue", "black", "blue", "black")#
	)#
	d.mean <- merge(d.mean, color.codes)#
	p.z <- ggplot(d.mean)+#
		geom_line(aes(x=test_name, y=z.score, group=grade))+#
		geom_point(aes(x=test_name, y=z.score, color=color.code), size=3)+#
		geom_hline(yintercept=0)+#
		scale_color_manual(values=c("black", "#00A6FF"), guide=F)+#
		scale_y_continuous()+#
		scale_x_discrete(limits=test.order)+#
		ylab("Z Score")+#
		labs(title="Benchmark Percent Correct Z-Scores")+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=6, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6),#
					axis.title.x=element_blank(),#
					title=element_text(size=7)#
		)+#
		facet_grid(subject + grade ~ .)#
  # STAR plots#
  d.star <- subset(star.data, teacher_name==teacher.name)#
	star.plot <- function(d, all.means) {#
		t.means <- ddply(d, .(grade.y, subject.x, subject.y), summarize,#
													mean=mean(last.modeled.gap, na.rm=T)#
		)#
		all.means.sub <- subset(all.means, subject.y %in% unique(d$subject.y) & #
														subject.x %in% unique(d$subject.x) &#
														grade.y %in% unique(d$grade.y) &#
														!is.na(sd)#
		)#
		ggplot(d, aes(x=last.modeled.gap))+#
			geom_bar(aes(y = ..density..), colour="black", binwidth=1)+#
			geom_vline(data=t.means, mapping=aes(xintercept=mean), color="red")+#
			geom_vline(data=all.means.sub, mapping=aes(xintercept=c(mean+sd,mean,mean-sd)),#
								color="blue", linetype=c(2,1,2)#
			)+#
			scale_y_continuous(labels=percent)+#
			scale_x_continuous(breaks=seq(-10,10,1))+#
			theme_bw()+#
			labs(title=paste0("STAR Gap from Grade Level, Latest Modeled Value"),#
						x="STAR Gap from Grade Level in Years (negative is below)",#
						y="Percent of Students"#
			)+#
			theme(title=element_text(size=6),#
						axis.text.y=element_text(size=6),#
						axis.text.x=element_text(size=6)#
			)+#
			facet_grid(subject.y + grade.y ~ subject.x)#
	}#
	if(nrow(d.star)>0){#
		stars <- star.plot(d.star, star.means)#
	}else{#
		stars <- grob()#
	}#
  # Observation scores plot#
  d.obs <- subset(obs.data, name==teacher.name)#
	if(nrow(d.obs) > 0){#
		obs.means.s <- drop.levels(subset(obs.means, small_school %in% unique(d.obs$small_school)))#
		obs.means.a <- rbind(obs.means.s, all.obs.means)#
		p.obs <- ggplot()+#
			geom_point(data=obs.means.a, aes(x=quarter, y=mean, color=small_school),#
									shape=1, position=position_dodge(.1)#
			)+#
			geom_errorbar(data=obs.means.a, aes(x=quarter, ymin=mean-sd, ymax=mean+sd,#
										color=small_school), width=0.5, position=position_dodge(.1)#
			)+#
			geom_point(data=d.obs, aes(x=quarter, y=score), shape=18, size=4, color="red")+#
			scale_y_continuous(limits=c(1,5), breaks=seq(1,5,0.5))+#
			scale_color_manual(values=c("#1B9E77", "#D95F02"), name="Mean and SD")+#
			labs(title="Quarterly Observation Scores",#
					x="Quarter",#
					y="Score"#
			)+#
			coord_flip()+#
			theme_bw()+#
			theme(title=element_text(size=6),#
						axis.text.y=element_text(size=6),#
						axis.text.x=element_text(size=6),#
						legend.title=element_text(size=6),#
						legend.text=element_text(size=6)#
			)#
	}else{#
		p.obs <- grob()#
	}#
	right.side <- arrangeGrob(p.z, stars, p.obs, ncol=1)#
	p <- arrangeGrob(p.bars, right.side, ncol=2,#
										# widths=c(0.67, 0.33),#
										main=paste0("\n2013-14 Teacher Profile - ", teacher.name)#
	)
setwd('/Users/Andrew/Dropbox/ReNew/Data Analysis/masterdash/analysis/R/functions')
make.num.for.z <- function(r){#
		if(is.na(r[['percent']])){#
			return(as.numeric(r[['achievement_code']]))#
		}else{#
			return(as.numeric(r[['percent']]))#
		}#
	}#
  # AL bars plot for DCI tests#
  se.t <- subset(se.data, teacher_name==teacher.name)#
	se.t.c <- se.t[,c("id", "teacher_name", "achievement_level", "subject", "test_name", "grade", "percent", "scaled_score")]#
	se.t.c <- merge(se.t.c, al.numbers)#
  se.t.c$perc_or_al_num <- apply(se.t.c, 1, function(r){#
    if(is.na(r['percent'])){#
      return(as.numeric(r['achievement_code']))#
    }else{#
      return(as.numerics(r['percent']))#
    }#
  })#
	d.props <- ddply(se.t.c, .(grade, subject), function(d){#
		data.frame(prop.table(table(d$test_name, d$achievement_level), 1))#
	})#
	names(d.props) <- c("grade", "subject", "test", "achievement_level", "perc")#
	d.props$achievement_level <- reorder(d.props$achievement_level,#
																new.order=c("A", "M", "B", "AB", "U")#
	)#
	d.props <- d.props[order(as.numeric(d.props$achievement_level)),]#
	b.above <- subset(d.props, achievement_level %in% c("A", "M", "B"))#
	b.above <- ddply(b.above, .(grade, subject, test), summarize, perc=sum(perc))#
	p.bars <- ggplot()+#
		geom_bar(data=d.props, aes(x=test, y=perc, fill=reorder(achievement_level, new.order=c("A", "M", "B", "AB", "U"))), stat="identity")+#
		geom_boxplot(data=se.t.c, aes(x=test_name, y=perc_or_al_num), alpha=0.01, width=0.5)+#
		geom_bar(data=highlights, aes(x=test, y=perc), fill="white", stat="identity", alpha=.4)+#
		scale_x_discrete(limits=test.order)+#
		scale_y_continuous(labels=percent, breaks=seq(0,1,.1))+#
		scale_fill_manual(values=alPalette, guide=F)+#
		ylab("Percent of Scores")+#
		xlab("Assessment")+#
		labs(title="Benchmark Percents at Achievement Levels and Percent Correct Boxplot")+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=6, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6),#
					title=element_text(size=7)#
		)+#
		facet_grid(subject + grade ~ .)#
	b.above.l13 <- subset(b.above, test=="L13")#
	if(nrow(b.above.l13) > 0){#
		p.bars  <- p.bars + geom_hline(data=b.above.l13,#
																		aes(yintercept=perc+.1), linetype=3#
		)#
	}#
#
	# Z-scores plot#
	al.numbers <- data.frame(achievement_level=c("A", "M", "B", "AB", "U", "B2", "AB2", "F", "PF", "ES", "MS", "WTS"),#
													achievement_code=c(1, 0.75, 0.5, 0.25, 0, 1, 0.5, 0.25, 0, 1, 0.5, 1)#
	)#
	gsse.data$num.for.z <- apply(gsse.data, 1, make.num.for.z)#
	test.info <- ddply(gsse.data, .(test_name, subject, grade), summarize, overall_mean=mean(num.for.z), sd=sd(num.for.z))#
	se.t.c <- se.t[,c("id", "teacher_name", "achievement_level", "subject", "test_name", "grade", "percent", "scaled_score")]#
	se.t.c <- merge(se.t.c, al.numbers)#
	se.t.c$num.for.z <- apply(se.t.c, 1, make.num.for.z)#
	d.mean <- ddply(se.t.c, .(subject, test_name, grade), summarize, average=mean(num.for.z))#
	d.mean <- merge(d.mean, test.info)#
	d.mean$z.score <- apply(d.mean, 1, function(r){#
		(as.numeric(r[['average']]) - as.numeric(r[['overall_mean']]))/as.numeric(r[['sd']])#
	})#
	color.codes <- data.frame(test_name=c("L13", "MLQ1", "MLQ2", "MLQ3", "B1", "MLQ4", "MLQ5", "B2", "MLQ6", "MLQ7", "B3", "PL", "L14", "B4"),#
														color.code=c("blue", "black", "black", "black", "blue", "black", "black", "blue", "black", "black", "blue", "black", "blue", "black")#
	)#
	d.mean <- merge(d.mean, color.codes)#
	p.z <- ggplot(d.mean)+#
		geom_line(aes(x=test_name, y=z.score, group=grade))+#
		geom_point(aes(x=test_name, y=z.score, color=color.code), size=3)+#
		geom_hline(yintercept=0)+#
		scale_color_manual(values=c("black", "#00A6FF"), guide=F)+#
		scale_y_continuous()+#
		scale_x_discrete(limits=test.order)+#
		ylab("Z Score")+#
		labs(title="Benchmark Percent Correct Z-Scores")+#
		theme_bw()+#
		theme(axis.text.x=element_text(size=6, angle=90, vjust=0.5),#
					axis.text.y=element_text(size=6),#
					axis.title.x=element_blank(),#
					title=element_text(size=7)#
		)+#
		facet_grid(subject + grade ~ .)#
  # STAR plots#
  d.star <- subset(star.data, teacher_name==teacher.name)#
	star.plot <- function(d, all.means) {#
		t.means <- ddply(d, .(grade.y, subject.x, subject.y), summarize,#
													mean=mean(last.modeled.gap, na.rm=T)#
		)#
		all.means.sub <- subset(all.means, subject.y %in% unique(d$subject.y) & #
														subject.x %in% unique(d$subject.x) &#
														grade.y %in% unique(d$grade.y) &#
														!is.na(sd)#
		)#
		ggplot(d, aes(x=last.modeled.gap))+#
			geom_bar(aes(y = ..density..), colour="black", binwidth=1)+#
			geom_vline(data=t.means, mapping=aes(xintercept=mean), color="red")+#
			geom_vline(data=all.means.sub, mapping=aes(xintercept=c(mean+sd,mean,mean-sd)),#
								color="blue", linetype=c(2,1,2)#
			)+#
			scale_y_continuous(labels=percent)+#
			scale_x_continuous(breaks=seq(-10,10,1))+#
			theme_bw()+#
			labs(title=paste0("STAR Gap from Grade Level, Latest Modeled Value"),#
						x="STAR Gap from Grade Level in Years (negative is below)",#
						y="Percent of Students"#
			)+#
			theme(title=element_text(size=6),#
						axis.text.y=element_text(size=6),#
						axis.text.x=element_text(size=6)#
			)+#
			facet_grid(subject.y + grade.y ~ subject.x)#
	}#
	if(nrow(d.star)>0){#
		stars <- star.plot(d.star, star.means)#
	}else{#
		stars <- grob()#
	}#
  # Observation scores plot#
  d.obs <- subset(obs.data, name==teacher.name)#
	if(nrow(d.obs) > 0){#
		obs.means.s <- drop.levels(subset(obs.means, small_school %in% unique(d.obs$small_school)))#
		obs.means.a <- rbind(obs.means.s, all.obs.means)#
		p.obs <- ggplot()+#
			geom_point(data=obs.means.a, aes(x=quarter, y=mean, color=small_school),#
									shape=1, position=position_dodge(.1)#
			)+#
			geom_errorbar(data=obs.means.a, aes(x=quarter, ymin=mean-sd, ymax=mean+sd,#
										color=small_school), width=0.5, position=position_dodge(.1)#
			)+#
			geom_point(data=d.obs, aes(x=quarter, y=score), shape=18, size=4, color="red")+#
			scale_y_continuous(limits=c(1,5), breaks=seq(1,5,0.5))+#
			scale_color_manual(values=c("#1B9E77", "#D95F02"), name="Mean and SD")+#
			labs(title="Quarterly Observation Scores",#
					x="Quarter",#
					y="Score"#
			)+#
			coord_flip()+#
			theme_bw()+#
			theme(title=element_text(size=6),#
						axis.text.y=element_text(size=6),#
						axis.text.x=element_text(size=6),#
						legend.title=element_text(size=6),#
						legend.text=element_text(size=6)#
			)#
	}else{#
		p.obs <- grob()#
	}#
	right.side <- arrangeGrob(p.z, stars, p.obs, ncol=1)#
	p <- arrangeGrob(p.bars, right.side, ncol=2,#
										# widths=c(0.67, 0.33),#
										main=paste0("\n2013-14 Teacher Profile - ", teacher.name)#
	)
p.bars
p
